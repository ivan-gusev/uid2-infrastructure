version: 2
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
#      - hold-apply:
#          type: approval
#          requires:
#            - plan-apply
      - apply:
          requires:
            - plan-apply
      - fleet-install:
          requires:
            - apply
#      - plan-destroy:
#          requires:
#            - apply
#      - hold-destroy:
#          type: approval
#          requires:
#            - plan-destroy
#      - destroy:
#          requires:
#            - hold-destroy
jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform -chdir=terraform init -input=false
            terraform -chdir=terraform plan -out tfapply -var-file variables.dev.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform -chdir=terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  fleet-install:
    docker:
#      - image: alpine/helm:3.5.2
      - image: kiwigrid/gcloud-kubectl-helm:3.3.4-312.0.0-267
    steps:
      - attach_workspace:
          at: .
      # Install/update CRDs everywheere
      - run:
          name: helm-fleet-crd
          command: |
            find ./terraform -name kubecontext-*.yaml -exec helm upgrade -n fleet-system --install --create-namespace --wait fleet-crd https://github.com/rancher/fleet/releases/download/v0.3.3/fleet-crd-0.3.3.tgz --kubeconfig {} \;
      # Install fleet manager to mission control cluster
      - run:
          name: fleet-manager
          command: |
            helm upgrade -n fleet-system --install --create-namespace --wait fleet https://github.com/rancher/fleet/releases/download/v0.3.3/fleet-0.3.3.tgz --kubeconfig ./terraform/kubecontext-mission-control.yaml
      # Create uid2 namespace
      - run:
          name: uid2-namespace
          command: |
            echo '{ "apiVersion": "v1", "kind": "Namespace", "metadata": { "name": "uid2" }}' | kubectl apply --kubeconfig="./terraform/kubecontext-mission-control.yaml" -f -
      # Generate cluster registration token
      - run:
          name: create-registration-token
          command: |
            echo '{"kind": "ClusterRegistrationToken", "apiVersion": "fleet.cattle.io/v1alpha1","metadata": {"name": "uid2-fleet", "namespace": "uid2"},"spec": {"ttl": "2h"}}' | kubectl apply --kubeconfig="./terraform/kubecontext-mission-control.yaml" -f -
      # Save cluster registration token
      - run:
          name: save-reegistration-token
          command: |
            kubectl -n uid2 get secret uid2-fleet -o 'jsonpath={.data.values}' --kubeconfig="./terraform/kubecontext-mission-control.yaml" | base64 -d
      - persist_to_workspace:
          root: .
          paths:
            - .
#  plan-destroy:
#    docker:
#      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: terraform create destroy plan
#          command: |
#            terraform -chdir=terraform plan -destroy -out tfdestroy -var-file variables.dev.tfvars
#      - persist_to_workspace:
#          root: .
#          paths:
#            - .
#  destroy:
#    docker:
#      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: terraform destroy
#          command: |
#            terraform -chdir=terraform apply -auto-approve tfdestroy
