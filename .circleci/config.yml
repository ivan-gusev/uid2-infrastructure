version: 2
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
#      - hold-apply:
#          type: approval
#          requires:
#            - plan-apply
      - apply:
          requires:
            - plan-apply
      - fleet-install:
          requires:
            - apply
#      - plan-destroy:
#          requires:
#            - apply
#      - hold-destroy:
#          type: approval
#          requires:
#            - plan-destroy
#      - destroy:
#          requires:
#            - hold-destroy
jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform -chdir=terraform init -input=false
            terraform -chdir=terraform plan -out tfapply -var-file variables.dev.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform -chdir=terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  fleet-install:
    docker:
      - image: alpine/helm:3.5.2
    steps:
      - attach_workspace:
          at: .
      - run:
          name: helm
          command: |
            helm upgradee -n fleet-system --install --create-namespace --wait fleet https://github.com/rancher/fleet/releases/download/v0.3.3/fleet-0.3.3.tgz --context kubecontext-us-west1.yaml
      - persist_to_workspace:
          root: .
          paths:
            - .
#  plan-destroy:
#    docker:
#      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: terraform create destroy plan
#          command: |
#            terraform -chdir=terraform plan -destroy -out tfdestroy -var-file variables.dev.tfvars
#      - persist_to_workspace:
#          root: .
#          paths:
#            - .
#  destroy:
#    docker:
#      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: terraform destroy
#          command: |
#            terraform -chdir=terraform apply -auto-approve tfdestroy
